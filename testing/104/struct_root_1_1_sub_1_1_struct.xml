<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="" xml:lang="en-US">
  <compounddef id="struct_root_1_1_sub_1_1_struct" kind="struct" language="C++" prot="public">
    <compoundname>Root::Sub::Struct</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_root_1_1_sub_1_1_struct_1adb4b7d803ad6e7cdd15b16fb51968d58" prot="public" static="no">
        <type>double</type>
        <definition>typedef double Root::Sub::Struct::Double</definition>
        <argsstring/>
        <name>Double</name>
        <qualifiedname>Root::Sub::Struct::Double</qualifiedname>
        <briefdescription>
          <para>A typedef that doesn't get merged with the one in Sub. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="104_typedef_merging.cpp" line="21" column="20" bodyfile="104_typedef_merging.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="related">
      <memberdef kind="typedef" id="struct_root_1_1_sub_1_1_struct_1a7cc214a236ad3bb6ad435bdcf5262a3f" prot="public" static="no">
        <type>int</type>
        <definition>typedef int Int</definition>
        <argsstring/>
        <name>Int</name>
        <qualifiedname>Root::Sub::Struct::Int</qualifiedname>
        <briefdescription>
          <para>A typedef in Sub that doesn't get merged with the one in Root. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="104_typedef_merging.cpp" line="27" column="15" bodyfile="104_typedef_merging.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_root_1_1_sub_1_1_struct_1a3ffd74e95952eacd75f04a2b85d61845" prot="public" static="no">
        <type>float</type>
        <definition>using Float =  float</definition>
        <argsstring/>
        <name>Float</name>
        <qualifiedname>Root::Sub::Struct::Float</qualifiedname>
        <briefdescription>
          <para>A using declaration in Sub doesn't get merged with the one in Root. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="104_typedef_merging.cpp" line="32" column="3" bodyfile="104_typedef_merging.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
      <para>A struct. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="104_typedef_merging.cpp" line="19" column="3" bodyfile="104_typedef_merging.cpp" bodystart="19" bodyend="22"/>
    <listofallmembers>
      <member refid="struct_root_1_1_sub_1_1_struct_1adb4b7d803ad6e7cdd15b16fb51968d58" prot="public" virt="non-virtual">
        <scope>Root::Sub::Struct</scope>
        <name>Double</name>
      </member>
      <member refid="struct_root_1_1_sub_1_1_struct_1a3ffd74e95952eacd75f04a2b85d61845" prot="public" virt="non-virtual">
        <scope>Root::Sub::Struct</scope>
        <name>Float</name>
      </member>
      <member refid="struct_root_1_1_sub_1_1_struct_1a7cc214a236ad3bb6ad435bdcf5262a3f" prot="public" virt="non-virtual">
        <scope>Root::Sub::Struct</scope>
        <name>Int</name>
      </member>
    </listofallmembers>
  </compounddef>
</doxygen>
